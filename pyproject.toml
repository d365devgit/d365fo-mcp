[project]
name = "d365fo-mcp"
version = "0.1.0"
description = "Simplified D365 Finance & Operations MCP Server with intelligent entity instructions"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
license = { text = "MIT" }
keywords = ["mcp", "d365", "finance", "operations", "ai", "claude"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastmcp>=2.10.0",
    "httpx>=0.24.0",
    "azure-identity>=1.23.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "aiosqlite>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "types-requests>=2.31.0",
]

[project.urls]
Homepage = "https://github.com/dougdaley/d365fo-mcp"
Documentation = "https://github.com/dougdaley/d365fo-mcp#readme"
Repository = "https://github.com/dougdaley/d365fo-mcp"
Issues = "https://github.com/dougdaley/d365fo-mcp/issues"

[project.scripts]
d365fo-mcp = "d365fo_mcp.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=d365fo_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests requiring D365 connection",
    "slow: Tests that take longer to run",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/d365fo_mcp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "@abstractmethod",
]

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert statements in tests

[tool.mypy]
python_version = "3.10"
packages = ["d365fo_mcp"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "fastmcp.*",
    "azure.*",
    "msal.*",
]
ignore_missing_imports = true